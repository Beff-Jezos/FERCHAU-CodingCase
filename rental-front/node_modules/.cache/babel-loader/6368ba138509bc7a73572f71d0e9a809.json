{"ast":null,"code":"var _jsxFileName = \"C:\\\\rentalApp\\\\rental-front\\\\src\\\\components\\\\CustomerManager.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../CustomerManager.css'; // optional für Styling\n\nconst CustomerManager = () => {\n  const [customers, setCustomers] = useState([]);\n  const [editCustomerId, setEditCustomerId] = useState(null);\n  const [editCustomerData, setEditCustomerData] = useState({\n    firstName: '',\n    email: '',\n    phone: ''\n  });\n\n  // Kundenliste laden\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/customers');\n      setCustomers(response.data);\n    } catch (error) {\n      console.error('Fehler beim Laden der Kunden:', error);\n    }\n  };\n\n  // Kunde löschen\n  const deleteCustomer = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/customers/${id}`);\n      fetchCustomers(); // Kundenliste nach Löschung neu laden\n    } catch (error) {\n      console.error('Fehler beim Löschen des Kunden:', error);\n    }\n  };\n\n  // Kunde bearbeiten\n  const editCustomer = customer => {\n    setEditCustomerId(customer.id);\n    setEditCustomerData({\n      firstName: customer.name,\n      email: customer.email,\n      phone: customer.phone\n    });\n  };\n\n  // Änderungen speichern\n  const saveCustomer = async () => {\n    try {\n      await axios.put(`http://localhost:5000/customers/${editCustomerId}`, editCustomerData);\n      setEditCustomerId(null);\n      fetchCustomers(); // Kundenliste nach dem Speichern neu laden\n    } catch (error) {\n      console.error('Fehler beim Aktualisieren des Kunden:', error);\n    }\n  };\n\n  // Bearbeitete Daten ändern\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditCustomerData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Kundenverwaltung\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Telefon\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Aktionen\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, customers.map(customer => /*#__PURE__*/React.createElement(\"tr\", {\n    key: customer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, editCustomerId === customer.id ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: editCustomerData.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }) : customer.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, editCustomerId === customer.id ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: editCustomerData.email,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }) : customer.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, editCustomerId === customer.id ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    name: \"phone\",\n    value: editCustomerData.phone,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }) : customer.phone), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, editCustomerId === customer.id ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, \"Speichern\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => editCustomer(customer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Bearbeiten\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteCustomer(customer.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"L\\xF6schen\"))))))));\n};\nexport default CustomerManager;","map":{"version":3,"names":["React","useState","useEffect","axios","CustomerManager","customers","setCustomers","editCustomerId","setEditCustomerId","editCustomerData","setEditCustomerData","firstName","email","phone","fetchCustomers","response","get","data","error","console","deleteCustomer","id","delete","editCustomer","customer","name","saveCustomer","put","handleInputChange","e","value","target","prevData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","type","onChange","onClick","Fragment"],"sources":["C:/rentalApp/rental-front/src/components/CustomerManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../CustomerManager.css'; // optional für Styling\r\n\r\nconst CustomerManager = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [editCustomerId, setEditCustomerId] = useState(null);\r\n  const [editCustomerData, setEditCustomerData] = useState({ firstName: '', email: '', phone: '' });\r\n\r\n  // Kundenliste laden\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/customers');\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      console.error('Fehler beim Laden der Kunden:', error);\r\n    }\r\n  };\r\n\r\n  // Kunde löschen\r\n  const deleteCustomer = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/customers/${id}`);\r\n      fetchCustomers(); // Kundenliste nach Löschung neu laden\r\n    } catch (error) {\r\n      console.error('Fehler beim Löschen des Kunden:', error);\r\n    }\r\n  };\r\n\r\n  // Kunde bearbeiten\r\n  const editCustomer = (customer) => {\r\n    setEditCustomerId(customer.id);\r\n    setEditCustomerData({ firstName: customer.name, email: customer.email, phone: customer.phone });\r\n  };\r\n\r\n  // Änderungen speichern\r\n  const saveCustomer = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/customers/${editCustomerId}`, editCustomerData);\r\n      setEditCustomerId(null);\r\n      fetchCustomers(); // Kundenliste nach dem Speichern neu laden\r\n    } catch (error) {\r\n      console.error('Fehler beim Aktualisieren des Kunden:', error);\r\n    }\r\n  };\r\n\r\n  // Bearbeitete Daten ändern\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditCustomerData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"customer-manager\">\r\n      <h2>Kundenverwaltung</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Telefon</th>\r\n            <th>Aktionen</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map((customer) => (\r\n            <tr key={customer.id}>\r\n              <td>{editCustomerId === customer.id ? (\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"name\" \r\n                  value={editCustomerData.name} \r\n                  onChange={handleInputChange} \r\n                />\r\n              ) : (\r\n                customer.name\r\n              )}</td>\r\n              <td>{editCustomerId === customer.id ? (\r\n                <input \r\n                  type=\"email\" \r\n                  name=\"email\" \r\n                  value={editCustomerData.email} \r\n                  onChange={handleInputChange} \r\n                />\r\n              ) : (\r\n                customer.email\r\n              )}</td>\r\n              <td>{editCustomerId === customer.id ? (\r\n                <input \r\n                  type=\"tel\" \r\n                  name=\"phone\" \r\n                  value={editCustomerData.phone} \r\n                  onChange={handleInputChange} \r\n                />\r\n              ) : (\r\n                customer.phone\r\n              )}</td>\r\n              <td>\r\n                {editCustomerId === customer.id ? (\r\n                  <button onClick={saveCustomer}>Speichern</button>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={() => editCustomer(customer)}>Bearbeiten</button>\r\n                    <button onClick={() => deleteCustomer(customer.id)}>Löschen</button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}